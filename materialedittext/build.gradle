apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'MaterialEditText'
    bintrayName = 'materialedittext'

    publishedGroupId = 'com.shuhart.materialedittext'
    libraryName = 'materialedittext'
    artifact = 'materialedittext'

    libraryDescription = 'Material EditText'

    siteUrl = 'https://github.com/shuhart/MaterialEditText'
    gitUrl = 'https://github.com/shuhart/MaterialEditText.git'

    libraryVersion = '2.1.6'

    developerId = 'shuhart'
    developerName = 'Redrick Shuhart'
    developerEmail = 'kornev.b@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

  defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile 'com.android.support:support-annotations:26.1.0'
  compile 'com.android.support:appcompat-v7:26.1.0'
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives sourcesJar
}

// Bintray
File localProps = project.rootProject.file('local.properties')

if (localProps.exists()) {
    Properties properties = new Properties()
    properties.load(localProps.newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            publish = true
            publicDownloadNumbers = true
            version {
                name = libraryVersion
                desc = libraryDescription
            }
        }
    }
}
